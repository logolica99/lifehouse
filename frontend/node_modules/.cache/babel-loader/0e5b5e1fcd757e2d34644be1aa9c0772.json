{"ast":null,"code":"var _jsxFileName = \"/home/logolica99/lifehouse/final-shit/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport \"./scss/styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./components/Login\";\nimport Main from \"./components/Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    getIsLogged();\n  }, []);\n  const [posts, setPosts] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [commentSubmit, setCommentSubmit] = useState(0);\n  const [postSubmit, setPostSubmit] = useState(0);\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [isLogged, setIsLogged] = useState(\"\");\n  useEffect(() => {\n    fetchPosts();\n    fetchNotifications(); //   fetchUserData();\n\n    saveIsLogged();\n  }, [isLogged, postSubmit, commentSubmit]);\n\n  const saveIsLogged = () => {\n    localStorage.setItem(\"isLogged\", isLogged);\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"userId\", userId);\n  };\n\n  const getIsLogged = () => {\n    if (localStorage.getItem(\"isLogged\") === null) {\n      localStorage.setItem(\"isLogged\", \"false\");\n      localStorage.setItem(\"username\", \"\");\n      localStorage.setItem(\"userId\", \"\");\n    } else {\n      setIsLogged(localStorage.getItem(\"isLogged\"));\n      setUsername(localStorage.getItem(\"username\"));\n      setUserId(localStorage.getItem(\"userId\"));\n    }\n  };\n\n  const fetchPosts = async () => {\n    url = \"http://192.168.0.103:8000/\";\n    const data = await fetch(`http://127.0.0.1:8000/api/following_posts/${username}`);\n    const post = await data.json();\n    setPosts(post); //console.log(post);\n  };\n\n  const fetchNotifications = async () => {\n    const data = await fetch(`http://127.0.0.1:8000/api/notifications/${username}`);\n    const notification = await data.json();\n    setNotifications(notification);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      isLogged: isLogged,\n      posts: posts,\n      username: username,\n      setUsername: setUsername,\n      setIsLogged: setIsLogged,\n      notifications: notifications,\n      userId: userId,\n      setUserId: setUserId,\n      commentSubmit: commentSubmit,\n      setCommentSubmit: setCommentSubmit,\n      setPostSubmit: setPostSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0tk1VxUm5mW9VOsMOpOgj+ukKyQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/logolica99/lifehouse/final-shit/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Nav","Login","Main","App","getIsLogged","posts","setPosts","notifications","setNotifications","commentSubmit","setCommentSubmit","postSubmit","setPostSubmit","username","setUsername","userId","setUserId","isLogged","setIsLogged","fetchPosts","fetchNotifications","saveIsLogged","localStorage","setItem","getItem","url","data","fetch","post","json","notification"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport \"./scss/styles.css\"\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./components/Login\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  useEffect(() => {\n    getIsLogged();\n  }, []);\n\n  const [posts, setPosts] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n\n  const [commentSubmit, setCommentSubmit] = useState(0);\n  const [postSubmit, setPostSubmit] = useState(0);\n\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [isLogged, setIsLogged] = useState(\"\");\n\n  useEffect(() => {\n    fetchPosts();\n    fetchNotifications();\n    //   fetchUserData();\n    saveIsLogged();\n  }, [isLogged, postSubmit, commentSubmit]);\n\n  const saveIsLogged = () => {\n    localStorage.setItem(\"isLogged\", isLogged);\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"userId\", userId);\n  };\n\n  const getIsLogged = () => {\n    if (localStorage.getItem(\"isLogged\") === null) {\n      localStorage.setItem(\"isLogged\", \"false\");\n      localStorage.setItem(\"username\", \"\");\n      localStorage.setItem(\"userId\", \"\");\n    } else {\n      setIsLogged(localStorage.getItem(\"isLogged\"));\n      setUsername(localStorage.getItem(\"username\"));\n      setUserId(localStorage.getItem(\"userId\"));\n    }\n  };\n\n  const fetchPosts = async () => {\n    url = \"http://192.168.0.103:8000/\"\n    const data = await fetch(\n      `http://127.0.0.1:8000/api/following_posts/${username}`\n    );\n\n    const post = await data.json();\n    setPosts(post);\n\n    //console.log(post);\n  };\n\n  const fetchNotifications = async () => {\n    const data = await fetch(\n      `http://127.0.0.1:8000/api/notifications/${username}`\n    );\n\n    const notification = await data.json();\n    setNotifications(notification);\n  };\n\n  return (\n    <div className=\"App\">\n      <Main\n        isLogged={isLogged}\n        posts={posts}\n        username={username}\n        setUsername={setUsername}\n        setIsLogged={setIsLogged}\n        notifications={notifications}\n        userId={userId}\n        setUserId={setUserId}\n        commentSubmit={commentSubmit}\n        setCommentSubmit={setCommentSubmit}\n        setPostSubmit={setPostSubmit}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}