{"ast":null,"code":"var _jsxFileName = \"G:\\\\final-shit\\\\frontend\\\\src\\\\components\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport Comment from './Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = props => {\n  _s();\n\n  useEffect(() => {\n    console.log('helo');\n    fetchComments();\n  }, []);\n  const [id, setId] = useState('');\n  setId(props.comment_id);\n  const [comments, setComments] = useState([]); // useEffect(() => {\n  //     console.log('helo')\n  //     fetchComments();\n  // }, []);\n\n  const fetchComments = () => {\n    props.posts.forEach(post => {\n      console.log(post.id);\n\n      if (post.id === parseInt(props.comment_id)) {\n        setComments(post.comments); //  console.log(post.comments)\n      }\n    });\n  }; //   console.log(props.posts[id])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment,\n          userId: props.userId\n        }, comment[0].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comments, \"yP9n39oL/8EsxE03N/fscCLRvig=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["G:/final-shit/frontend/src/components/Comments.js"],"names":["useParams","React","useState","useEffect","Comment","Comments","props","console","log","fetchComments","id","setId","comment_id","comments","setComments","posts","forEach","post","parseInt","map","comment","userId"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACpBH,EAAAA,SAAS,CAAC,MAAM;AAChBI,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,IAAAA,aAAa;AAChB,GAHY,EAGV,EAHU,CAAT;AAKH,QAAM,CAACC,EAAD,EAAIC,KAAJ,IAAaT,QAAQ,CAAC,EAAD,CAA3B;AACAS,EAAAA,KAAK,CAACL,KAAK,CAACM,UAAP,CAAL;AACD,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC,CARwB,CAUxB;AACA;AACA;AACA;;AAGA,QAAMO,aAAa,GAAG,MAAK;AAGvBH,IAAAA,KAAK,CAACS,KAAN,CAAYC,OAAZ,CAAoBC,IAAI,IAAI;AACzBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACP,EAAjB;;AACC,UAAIO,IAAI,CAACP,EAAL,KAAUQ,QAAQ,CAACZ,KAAK,CAACM,UAAP,CAAtB,EAAyC;AACrCE,QAAAA,WAAW,CAACG,IAAI,CAACJ,QAAN,CAAX,CADqC,CAEvC;AACD;AAEJ,KAPD;AAQH,GAXD,CAhBwB,CA8B3B;;;AACG,sBACI;AAAA,cAEKA,QAAQ,CAACM,GAAT,CAAcC,OAAD,IAAa;AACvB,0BACI;AAAA,+BACI,QAAC,OAAD;AAEI,UAAA,OAAO,EAAEA,OAFb;AAGI,UAAA,MAAM,EAAEd,KAAK,CAACe;AAHlB,WACSD,OAAO,CAAC,CAAD,CAAP,CAAWV,EADpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVA;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAjDD;;GAAML,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Comment from './Comment'\r\n\r\n\r\n\r\nconst Comments = (props) => {\r\n        useEffect(() => {\r\n        console.log('helo')\r\n        fetchComments();\r\n    }, []);\r\n\r\n     const [id,setId] = useState('');\r\n     setId(props.comment_id)\r\n    const [comments,setComments] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log('helo')\r\n    //     fetchComments();\r\n    // }, []);\r\n  \r\n\r\n    const fetchComments = () =>{\r\n        \r\n      \r\n        props.posts.forEach(post => {\r\n           console.log(post.id)\r\n            if (post.id===parseInt(props.comment_id)){\r\n                setComments(post.comments)\r\n              //  console.log(post.comments)\r\n            }\r\n    \r\n        });\r\n    }\r\n\r\n\r\n //   console.log(props.posts[id])\r\n    return (\r\n        <div>\r\n\r\n            {comments.map((comment) => {\r\n                return (\r\n                    <div>\r\n                        <Comment\r\n                            key={comment[0].id}\r\n                            comment={comment}\r\n                            userId={props.userId}\r\n                        />\r\n                    </div>\r\n                );\r\n            })}\r\n        \r\n           \r\n        </div>\r\n    );\r\n};\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}