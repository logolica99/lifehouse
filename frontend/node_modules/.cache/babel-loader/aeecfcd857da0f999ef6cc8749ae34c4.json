{"ast":null,"code":"var _jsxFileName = \"/media/logolica99/New Volume/dummy/lifehouse/frontend/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  const [queryString, setQueryString] = useState(\"\");\n  const [queryResults, setQueryResults] = useState([]);\n  const [afterSearch, setAfterResults] = useState(\"\");\n\n  const queryFormHandler = e => {\n    setQueryString(e.target.value);\n  };\n\n  const getCookie = name => {\n    var cookieValue = null;\n\n    if (document.cookie && document.cookie !== \"\") {\n      var cookies = document.cookie.split(\";\");\n\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    setAfterResults(`Results for \"${queryString}:\"`);\n    var queryWord = queryString.split(\" \").join(\" \");\n    const data = await fetch(`${props.apiUrl}/query/${queryWord}`);\n    const results = await data.json(); //        console.log(results);\n\n    setQueryResults(results);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search_page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: queryFormHandler,\n          value: queryString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"search_query_text\",\n        children: afterSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allresults\",\n        children: queryResults.map(result => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result_container\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/user/${result}`,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                class: \"result\",\n                children: [\"@\", result]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"qMO833ipafHLQbwUh73JLFxaS3c=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/media/logolica99/New Volume/dummy/lifehouse/frontend/src/components/Search.js"],"names":["React","useState","Link","Search","props","queryString","setQueryString","queryResults","setQueryResults","afterSearch","setAfterResults","queryFormHandler","e","target","value","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","submitHandler","preventDefault","queryWord","join","data","fetch","apiUrl","results","json","map","result"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Search = (props) => {\r\n  const [queryString, setQueryString] = useState(\"\");\r\n  const [queryResults, setQueryResults] = useState([]);\r\n  const [afterSearch, setAfterResults] = useState(\"\");\r\n\r\n  const queryFormHandler = (e) => {\r\n    setQueryString(e.target.value);\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== \"\") {\r\n      var cookies = document.cookie.split(\";\");\r\n      for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setAfterResults(`Results for \"${queryString}:\"`);\r\n    var queryWord = queryString.split(\" \").join(\" \");\r\n    \r\n\r\n    const data = await fetch(`${props.apiUrl}/query/${queryWord}`);\r\n    const results = await data.json();\r\n    //        console.log(results);\r\n    setQueryResults(results);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search_page\">\r\n      <div className=\"search_container\">\r\n        <form onSubmit={submitHandler}>\r\n          <input type=\"text\" onChange={queryFormHandler} value={queryString} />\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n        <h2 className=\"search_query_text\">{afterSearch}</h2>\r\n\r\n        <div className=\"allresults\">\r\n          {queryResults.map((result) => {\r\n            return (\r\n              <div className=\"result_container\">\r\n                <Link to={`/user/${result}`}>\r\n                  <h3 class=\"result\">@{result}</h3>\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}