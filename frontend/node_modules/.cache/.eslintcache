[{"/home/logolica99/lifehouse/final-shit/frontend/src/index.js":"1","/home/logolica99/lifehouse/final-shit/frontend/src/reportWebVitals.js":"2","/home/logolica99/lifehouse/final-shit/frontend/src/App.js":"3","/home/logolica99/lifehouse/final-shit/frontend/src/components/Login.js":"4","/home/logolica99/lifehouse/final-shit/frontend/src/components/Nav.js":"5","/home/logolica99/lifehouse/final-shit/frontend/src/components/Main.js":"6","/home/logolica99/lifehouse/final-shit/frontend/src/components/Search.js":"7","/home/logolica99/lifehouse/final-shit/frontend/src/components/Homepage.js":"8","/home/logolica99/lifehouse/final-shit/frontend/src/components/Notifications.js":"9","/home/logolica99/lifehouse/final-shit/frontend/src/components/Message.js":"10","/home/logolica99/lifehouse/final-shit/frontend/src/components/User.js":"11","/home/logolica99/lifehouse/final-shit/frontend/src/components/Register.js":"12","/home/logolica99/lifehouse/final-shit/frontend/src/components/Posts.js":"13","/home/logolica99/lifehouse/final-shit/frontend/src/components/Comments.js":"14","/home/logolica99/lifehouse/final-shit/frontend/src/components/CreatePost.js":"15","/home/logolica99/lifehouse/final-shit/frontend/src/components/Notification.js":"16","/home/logolica99/lifehouse/final-shit/frontend/src/components/Comment.js":"17","/home/logolica99/lifehouse/final-shit/frontend/src/components/Post.js":"18","/home/logolica99/lifehouse/final-shit/frontend/src/components/CreateComment.js":"19"},{"size":501,"mtime":1623771771502,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1623771771502,"results":"22","hashOfConfig":"21"},{"size":2316,"mtime":1623771771502,"results":"23","hashOfConfig":"21"},{"size":2918,"mtime":1623782370356,"results":"24","hashOfConfig":"21"},{"size":978,"mtime":1623771771502,"results":"25","hashOfConfig":"21"},{"size":3905,"mtime":1623771771502,"results":"26","hashOfConfig":"21"},{"size":94,"mtime":1623771771506,"results":"27","hashOfConfig":"21"},{"size":492,"mtime":1623771771502,"results":"28","hashOfConfig":"21"},{"size":559,"mtime":1623771771506,"results":"29","hashOfConfig":"21"},{"size":97,"mtime":1623771771506,"results":"30","hashOfConfig":"21"},{"size":4790,"mtime":1623848454032,"results":"31","hashOfConfig":"21"},{"size":4406,"mtime":1623782381892,"results":"32","hashOfConfig":"21"},{"size":430,"mtime":1623771771506,"results":"33","hashOfConfig":"21"},{"size":1293,"mtime":1623849082824,"results":"34","hashOfConfig":"21"},{"size":2058,"mtime":1623771771506,"results":"35","hashOfConfig":"21"},{"size":169,"mtime":1623771771506,"results":"36","hashOfConfig":"21"},{"size":5468,"mtime":1623849428455,"results":"37","hashOfConfig":"21"},{"size":5259,"mtime":1623849432920,"results":"38","hashOfConfig":"21"},{"size":2064,"mtime":1623771771506,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1o20an0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/logolica99/lifehouse/final-shit/frontend/src/index.js",[],["83","84"],"/home/logolica99/lifehouse/final-shit/frontend/src/reportWebVitals.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/App.js",["85","86","87","88","89","90"],"import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./components/Login\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  useEffect(() => {\n    getIsLogged();\n  }, []);\n\n  const [posts, setPosts] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n\n  const [commentSubmit, setCommentSubmit] = useState(0);\n  const [postSubmit, setPostSubmit] = useState(0);\n\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [isLogged, setIsLogged] = useState(\"\");\n\n  useEffect(() => {\n    fetchPosts();\n    fetchNotifications();\n    //   fetchUserData();\n    saveIsLogged();\n  }, [isLogged, postSubmit, commentSubmit]);\n\n  const saveIsLogged = () => {\n    localStorage.setItem(\"isLogged\", isLogged);\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"userId\", userId);\n  };\n\n  const getIsLogged = () => {\n    if (localStorage.getItem(\"isLogged\") === null) {\n      localStorage.setItem(\"isLogged\", \"false\");\n      localStorage.setItem(\"username\", \"\");\n      localStorage.setItem(\"userId\", \"\");\n    } else {\n      setIsLogged(localStorage.getItem(\"isLogged\"));\n      setUsername(localStorage.getItem(\"username\"));\n      setUserId(localStorage.getItem(\"userId\"));\n    }\n  };\n\n  const fetchPosts = async () => {\n    const data = await fetch(\n      `http://127.0.0.1:8000/api/following_posts/${username}`\n    );\n\n    const post = await data.json();\n    setPosts(post);\n\n    //console.log(post);\n  };\n\n  const fetchNotifications = async () => {\n    const data = await fetch(\n      `http://127.0.0.1:8000/api/notifications/${username}`\n    );\n\n    const notification = await data.json();\n    setNotifications(notification);\n  };\n\n  return (\n    <div className=\"App\">\n      <Main\n        isLogged={isLogged}\n        posts={posts}\n        username={username}\n        setUsername={setUsername}\n        setIsLogged={setIsLogged}\n        notifications={notifications}\n        userId={userId}\n        setUserId={setUserId}\n        commentSubmit={commentSubmit}\n        setCommentSubmit={setCommentSubmit}\n        setPostSubmit={setPostSubmit}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/home/logolica99/lifehouse/final-shit/frontend/src/components/Login.js",["91","92"],"import React, { useState, useEffect } from \"react\";\r\nimport Register from \"./Register\";\r\n\r\nconst Login = (props) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginPage, setLoginPage] = useState(true);\r\n  const usernameFormHandler = (e) => {\r\n    props.setUsername(e.target.value);\r\n  };\r\n  const passwordFormHandler = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== \"\") {\r\n      var cookies = document.cookie.split(\";\");\r\n      for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const loginPageOrRegisterPage = () => {\r\n    if (loginPage) {\r\n      return (\r\n        <div>\r\n          <form onSubmit={submitHandler}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              onChange={usernameFormHandler}\r\n              value={props.username}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={passwordFormHandler}\r\n              value={password}\r\n            />\r\n            <input type=\"submit\" value=\"Log In\" />\r\n          </form>\r\n          <p>\r\n            Don't have an account?{\" \"}\r\n            <a href=\"\" onClick={loginPageToRegisterPage}>\r\n              Sign Up\r\n            </a>\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Register\r\n          username={props.username}\r\n          setUsername={props.setUsername}\r\n          setIsLogged={props.setIsLogged}\r\n          userId={props.userId}\r\n          setUserId={props.setUserId}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const loginPageToRegisterPage = (e) => {\r\n    e.preventDefault();\r\n    setLoginPage(false);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    var csrftoken = getCookie(\"csrftoken\");\r\n    fetch(\"http://127.0.0.1:8000/api/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"X-CSRFToken\": csrftoken,\r\n      },\r\n      body: JSON.stringify({\r\n        username: props.username,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((data) => data.json())\r\n\r\n      .then((data) => {\r\n        console.log(data.message);\r\n        if (data.message === \"Logged in Successfully\") {\r\n          props.setUserId(data.user_id);\r\n          props.setIsLogged(\"true\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"ERROR:\", error);\r\n      });\r\n  };\r\n\r\n  return <div>{loginPageOrRegisterPage()}</div>;\r\n};\r\nexport default Login;\r\n","/home/logolica99/lifehouse/final-shit/frontend/src/components/Nav.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Main.js",["93","94","95","96","97"],"import Login from './Login';\r\nimport Nav from './Nav';\r\nimport Homepage from './Homepage';\r\nimport Search from './Search';\r\nimport Notifications from './Notifications';\r\nimport Message from './Message';\r\nimport User from './User';\r\nimport Posts from './Posts';\r\nimport Comments from './Comments';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Main = (props) => {\r\n    useEffect(() => {\r\n        isLoggedView();\r\n    }, [props.isLogged]);\r\n\r\n    const logoutHandler = () => {\r\n        props.setIsLogged(false);\r\n    }; //component={Homepage}\r\n    const isLoggedView = () => {\r\n        if (props.isLogged === 'true') {\r\n            return (\r\n                <Router>\r\n                    <div>\r\n                        <Nav username={props.username}/>\r\n                        <Route\r\n                            path='/'\r\n                            exact\r\n                            render={() => (\r\n                                <Homepage\r\n                                    posts={props.posts}\r\n                                    userId={props.userId}\r\n                                    setCommentSubmit={props.setCommentSubmit}\r\n                                    setPostSubmit={props.setPostSubmit}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route path='/search' exact component={Search} />\r\n                        <Route\r\n                            path='/notifications'\r\n                            exact\r\n                            render={() => (\r\n                                <Notifications\r\n                                    notifications={props.notifications}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route path='/messages' exact component={Message} />\r\n                        <Route\r\n                            path='/User/:username'\r\n                            exact\r\n                            render={({ match }) => (\r\n                                <User\r\n                                    username={match.params.username}\r\n                                    followers={props.followers}\r\n                                    following={props.following}\r\n                                  \r\n                                    userId={props.userId}\r\n                                    commentSubmit={props.commentSubmit}\r\n                                    setCommentSubmit={props.setCommentSubmit}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            path='/comments/:id'\r\n                            exact\r\n                            render={({ match }) => (\r\n                                <Comments\r\n                                    posts={props.posts}\r\n                                    comment_id={match.params.id}\r\n                                    userId={props.userId}\r\n                                    setCommentSubmit={props.setCommentSubmit}\r\n                                />\r\n                            )}\r\n                        />\r\n\r\n                    </div>\r\n                </Router>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Login\r\n                    username={props.username}\r\n                    setUsername={props.setUsername}\r\n                    setIsLogged={props.setIsLogged}\r\n                    userId={props.userId}\r\n                    setUserId={props.setUserId}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isLoggedView()}\r\n            <button onClick={logoutHandler}>logout</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","/home/logolica99/lifehouse/final-shit/frontend/src/components/Search.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Homepage.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Notifications.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Message.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/User.js",["98","99"],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Register.js",["100"],"import Login from \"./Login\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Register = (props) => {\r\n  const [registerPage, setRegisterPage] = useState(true);\r\n\r\n  //console.log(props)\r\n  const [username, setUsername] = useState(\"\");\r\n  const [first_name, setFirstName] = useState(\"\");\r\n  const [last_name, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmation, setConfirmation] = useState(\"\");\r\n\r\n  const getCookie = (name) => {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== \"\") {\r\n      var cookies = document.cookie.split(\";\");\r\n      for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const registerPageToLoginPage = (e) => {\r\n    e.preventDefault();\r\n    setRegisterPage(false);\r\n  };\r\n\r\n  const usernameFormHandler = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const passwordFormHandler = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const confirmationFormHandler = (e) => {\r\n    setConfirmation(e.target.value);\r\n  };\r\n  const emailFormHandler = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const firstNameFormHandler = (e) => {\r\n    setFirstName(e.target.value);\r\n  };\r\n  const lastNameFormHandler = (e) => {\r\n    setLastName(e.target.value);\r\n  };\r\n\r\n  const loginPageOrRegisterPage = () => {\r\n    if (registerPage) {\r\n      return (\r\n        <div>\r\n          <form onSubmit={submitHandler}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChange={usernameFormHandler}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              value={first_name}\r\n              onChange={firstNameFormHandler}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              value={last_name}\r\n              onChange={lastNameFormHandler}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={emailFormHandler}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={passwordFormHandler}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmation}\r\n              onChange={confirmationFormHandler}\r\n            />\r\n            <input type=\"submit\" value=\"Sign Up\" />\r\n          </form>\r\n          <p>\r\n            Already have an account?{\" \"}\r\n            <a href=\"\" onClick={registerPageToLoginPage}>\r\n              Login\r\n            </a>\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Login\r\n          username={props.username}\r\n          setUsername={props.setUsername}\r\n          setIsLogged={props.setIsLogged}\r\n          userId={props.userId}\r\n          setUserId={props.setUserId}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    var csrftoken = getCookie(\"csrftoken\");\r\n    fetch(\"http://127.0.0.1:8000/api/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"X-CSRFToken\": csrftoken,\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        confirmation: confirmation,\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n      }),\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        console.log(data.message);\r\n        props.setUsername(username);\r\n        if (data.message === \"account created successfully\") {\r\n          props.setUserId(data.user_id);\r\n          props.setIsLogged(\"true\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"ERROR: \", error);\r\n      });\r\n  };\r\n\r\n  return <div>{loginPageOrRegisterPage()}</div>;\r\n};\r\nexport default Register;\r\n","/home/logolica99/lifehouse/final-shit/frontend/src/components/Posts.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Comments.js",["101"],"/home/logolica99/lifehouse/final-shit/frontend/src/components/CreatePost.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Notification.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Comment.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Post.js",["102"],"/home/logolica99/lifehouse/final-shit/frontend/src/components/CreateComment.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":3,"column":27,"nodeType":"109","messageId":"110","endLine":3,"endColumn":33},{"ruleId":"107","severity":1,"message":"111","line":3,"column":35,"nodeType":"109","messageId":"110","endLine":3,"endColumn":41},{"ruleId":"107","severity":1,"message":"112","line":3,"column":43,"nodeType":"109","messageId":"110","endLine":3,"endColumn":48},{"ruleId":"107","severity":1,"message":"113","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":11},{"ruleId":"107","severity":1,"message":"114","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":28,"column":6,"nodeType":"117","endLine":28,"endColumn":43,"suggestions":"118"},{"ruleId":"107","severity":1,"message":"119","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":51,"column":13,"nodeType":"122","endLine":51,"endColumn":58},{"ruleId":"107","severity":1,"message":"123","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":13},{"ruleId":"107","severity":1,"message":"124","line":10,"column":17,"nodeType":"109","messageId":"110","endLine":10,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":11,"column":35,"nodeType":"109","messageId":"110","endLine":11,"endColumn":41},{"ruleId":"107","severity":1,"message":"125","line":11,"column":50,"nodeType":"109","messageId":"110","endLine":11,"endColumn":58},{"ruleId":"115","severity":1,"message":"126","line":17,"column":8,"nodeType":"117","endLine":17,"endColumn":24,"suggestions":"127"},{"ruleId":"115","severity":1,"message":"128","line":27,"column":7,"nodeType":"117","endLine":27,"endColumn":9,"suggestions":"129"},{"ruleId":"115","severity":1,"message":"130","line":33,"column":8,"nodeType":"117","endLine":33,"endColumn":44,"suggestions":"131"},{"ruleId":"120","severity":1,"message":"121","line":100,"column":13,"nodeType":"122","endLine":100,"endColumn":58},{"ruleId":"107","severity":1,"message":"132","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":19},{"ruleId":"107","severity":1,"message":"119","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Nav' is defined but never used.","'Login' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchNotifications', 'fetchPosts', and 'saveIsLogged'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Posts' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'isLoggedView'. Either include it or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'fetchUserData'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has a missing dependency: 'fetchUserPosts'. Either include it or remove the dependency array.",["138"],"'useParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [isLogged, postSubmit, commentSubmit, fetchPosts, fetchNotifications, saveIsLogged]",{"range":"147","text":"148"},"Update the dependencies array to be: [isLoggedView, props.isLogged]",{"range":"149","text":"150"},"Update the dependencies array to be: [fetchUserData]",{"range":"151","text":"152"},"Update the dependencies array to be: [props.username, props.commentSubmit, fetchUserPosts]",{"range":"153","text":"154"},[795,832],"[isLogged, postSubmit, commentSubmit, fetchPosts, fetchNotifications, saveIsLogged]",[523,539],"[isLoggedView, props.isLogged]",[860,862],"[fetchUserData]",[1018,1054],"[props.username, props.commentSubmit, fetchUserPosts]"]