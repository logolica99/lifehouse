{"ast":null,"code":"var _jsxFileName = \"G:\\\\final-shit\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    getIsLogged();\n  }, []);\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState('');\n  const [isLogged, setIsLogged] = useState('');\n  useEffect(() => {\n    fetchPosts();\n    saveIsLogged();\n  }, [isLogged]);\n\n  const saveIsLogged = () => {\n    localStorage.setItem('isLogged', isLogged);\n    localStorage.setItem('username', username);\n  };\n\n  const getIsLogged = () => {\n    if (localStorage.getItem('isLogged') === null) {\n      localStorage.setItem('isLogged', \"false\");\n      localStorage.setItem('username', '');\n    } else {\n      setIsLogged(localStorage.getItem('isLogged'));\n      setUsername(localStorage.getItem('username'));\n    }\n  };\n\n  const fetchPosts = async () => {\n    const data = await fetch(`http://127.0.0.1:8000/api/following_posts/${username}`);\n    const post = await data.json();\n    setPosts(post);\n    console.log(post);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      isLogged: isLogged,\n      username: username,\n      setUsername: setUsername,\n      setIsLogged: setIsLogged,\n      posts: posts,\n      setPosts: setPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"ug1dA/CZqht+lAfm18i44MWC6mA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/final-shit/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Nav","Login","Main","App","getIsLogged","posts","setPosts","username","setUsername","isLogged","setIsLogged","fetchPosts","saveIsLogged","localStorage","setItem","getItem","data","fetch","post","json","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACXR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,UAAU;AACVC,IAAAA,YAAY;AACf,GAHQ,EAGN,CAACH,QAAD,CAHM,CAAT;;AAKA,QAAMG,YAAY,GAAG,MAAM;AACvBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCL,QAAjC;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCP,QAAjC;AACH,GAHD;;AAKA,QAAMH,WAAW,GAAG,MAAM;AACtB,QAAIS,YAAY,CAACE,OAAb,CAAqB,UAArB,MAAqC,IAAzC,EAA+C;AAC3CF,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,OAAjC;AACAD,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,EAAjC;AAEH,KAJD,MAIO;AACHJ,MAAAA,WAAW,CAACG,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAD,CAAX;AACAP,MAAAA,WAAW,CAACK,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAD,CAAX;AACH;AACJ,GATD;;AAWA,QAAMJ,UAAU,GAAG,YAAY;AAC3B,UAAMK,IAAI,GAAG,MAAMC,KAAK,CACnB,6CAA4CV,QAAS,EADlC,CAAxB;AAIA,UAAMW,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAb,IAAAA,QAAQ,CAACY,IAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GARD;;AAUA,sBAGQ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAET,QAAhB;AAA0B,MAAA,QAAQ,EAAEF,QAApC;AAA8C,MAAA,WAAW,EAAEC,WAA3D;AAAwE,MAAA,WAAW,EAAEE,WAArF;AAAkG,MAAA,KAAK,EAAEL,KAAzG;AAAgH,MAAA,QAAQ,EAAEC;AAA1H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAHR;AAQH;;GA/CQH,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Main from './components/Main'\n\n\n\nfunction App() {\n    useEffect(() => {\n        getIsLogged();\n    }, []);\n    const [posts, setPosts] = useState([]);\n\n    const [username, setUsername] = useState('');\n    const [isLogged, setIsLogged] = useState('');\n    useEffect(() => {\n        fetchPosts();\n        saveIsLogged();\n    }, [isLogged]);\n\n    const saveIsLogged = () => {\n        localStorage.setItem('isLogged', isLogged);\n        localStorage.setItem('username', username);\n    };\n\n    const getIsLogged = () => {\n        if (localStorage.getItem('isLogged') === null) {\n            localStorage.setItem('isLogged', \"false\");\n            localStorage.setItem('username', '');\n\n        } else {\n            setIsLogged(localStorage.getItem('isLogged'));\n            setUsername(localStorage.getItem('username'))\n        }\n    };\n\n    const fetchPosts = async () => {\n        const data = await fetch(\n            `http://127.0.0.1:8000/api/following_posts/${username}`\n        );\n\n        const post = await data.json();\n        setPosts(post);\n        console.log(post);\n    };\n\n    return (\n\n\n            <div className='App'>\n                <Main isLogged={isLogged} username={username} setUsername={setUsername} setIsLogged={setIsLogged} posts={posts} setPosts={setPosts}/>\n            </div>\n       \n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}