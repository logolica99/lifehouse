[{"G:\\final-shit\\frontend\\src\\index.js":"1","G:\\final-shit\\frontend\\src\\App.js":"2","G:\\final-shit\\frontend\\src\\reportWebVitals.js":"3","G:\\final-shit\\frontend\\src\\components\\Nav.js":"4","G:\\final-shit\\frontend\\src\\components\\Login.js":"5","G:\\final-shit\\frontend\\src\\components\\Main.js":"6","G:\\final-shit\\frontend\\src\\components\\Homepage.js":"7","G:\\final-shit\\frontend\\src\\components\\Search.js":"8","G:\\final-shit\\frontend\\src\\components\\Message.js":"9","G:\\final-shit\\frontend\\src\\components\\User.js":"10","G:\\final-shit\\frontend\\src\\components\\Posts.js":"11","G:\\final-shit\\frontend\\src\\components\\Post.js":"12","G:\\final-shit\\frontend\\src\\components\\Notifications.js":"13","G:\\final-shit\\frontend\\src\\components\\Notification.js":"14","G:\\final-shit\\frontend\\src\\components\\CreatePost.js":"15","G:\\final-shit\\frontend\\src\\components\\Comment.js":"16","G:\\final-shit\\frontend\\src\\components\\CreateComment.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":3189,"mtime":1622915872603,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":954,"mtime":1622388461064,"results":"22","hashOfConfig":"19"},{"size":2257,"mtime":1622572380608,"results":"23","hashOfConfig":"19"},{"size":3309,"mtime":1622915939492,"results":"24","hashOfConfig":"19"},{"size":492,"mtime":1622914902002,"results":"25","hashOfConfig":"19"},{"size":94,"mtime":1622271283093,"results":"26","hashOfConfig":"19"},{"size":97,"mtime":1622271313746,"results":"27","hashOfConfig":"19"},{"size":2011,"mtime":1622915999286,"results":"28","hashOfConfig":"19"},{"size":1284,"mtime":1622915262936,"results":"29","hashOfConfig":"19"},{"size":2925,"mtime":1622913875284,"results":"30","hashOfConfig":"19"},{"size":559,"mtime":1622390623623,"results":"31","hashOfConfig":"19"},{"size":169,"mtime":1622390486608,"results":"32","hashOfConfig":"19"},{"size":2058,"mtime":1622915131917,"results":"33","hashOfConfig":"19"},{"size":3107,"mtime":1622910679249,"results":"34","hashOfConfig":"19"},{"size":2064,"mtime":1622915143840,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"11lcxgv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\final-shit\\frontend\\src\\index.js",[],["74","75"],"G:\\final-shit\\frontend\\src\\App.js",["76","77","78","79","80","81"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Main from './components/Main';\n\nfunction App() {\n    useEffect(() => {\n        getIsLogged();\n    }, []);\n\n\n    const [posts, setPosts] = useState([]);\n    const [notifications, setNotifications] = useState([]);\n    const[userData,setUserData] = useState([]);\n    const [commentSubmit,setCommentSubmit] = useState(0);\n    const [postSubmit,setPostSubmit] = useState(0);\n\n    const [username, setUsername] = useState('');\n    const [userId, setUserId] = useState('');\n    const [isLogged, setIsLogged] = useState('');\n    const [followers,setFollowers]= useState('');\n    const [following,setFollowing] = useState('');\n\n    useEffect(() => {\n        fetchPosts();\n        fetchNotifications();\n        fetchUserData();\n        saveIsLogged();\n    }, [isLogged,postSubmit,commentSubmit]);\n\n    const saveIsLogged = () => {\n        localStorage.setItem('isLogged', isLogged);\n        localStorage.setItem('username', username);\n        localStorage.setItem('userId',userId)\n    };\n\n    const getIsLogged = () => {\n        if (localStorage.getItem('isLogged') === null) {\n            localStorage.setItem('isLogged', 'false');\n            localStorage.setItem('username', '');\n            localStorage.setItem('userId', '');\n        } else {\n            setIsLogged(localStorage.getItem('isLogged'));\n            setUsername(localStorage.getItem('username'));\n            setUserId(localStorage.getItem('userId'));\n        }\n    };\n\n    const fetchPosts = async () => {\n        const data = await fetch(\n            `http://127.0.0.1:8000/api/following_posts/${username}`\n        );\n\n        const post = await data.json();\n        setPosts(post);\n\n        //console.log(post);\n    };\n\n    const fetchNotifications = async () => {\n        const data = await fetch(\n            `http://127.0.0.1:8000/api/notifications/${username}`\n        );\n\n        const notification = await data.json();\n        setNotifications(notification);\n    };\n\n    const fetchUserData = async () => {\n        const data = await fetch(\n            `http://127.0.0.1:8000/api/user/${username}/${userId}`\n        );\n\n        const user_data = await data.json();\n        setFollowers(user_data.followers.length);\n        setFollowing(user_data.following.length);\n        setUserData(user_data);\n      \n    };\n\n    return (\n        <div className='App'>\n            <Main\n                isLogged={isLogged}\n                posts={posts}\n                username={username}\n                setUsername={setUsername}\n                setIsLogged={setIsLogged}\n                notifications={notifications}\n                userId={userId}\n                setUserId={setUserId}\n                userData={userData}\n                followers={followers}\n                following={following}\n                commentSubmit={commentSubmit}\n                setCommentSubmit={setCommentSubmit}\n                setPostSubmit={setPostSubmit}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","G:\\final-shit\\frontend\\src\\reportWebVitals.js",[],"G:\\final-shit\\frontend\\src\\components\\Nav.js",[],"G:\\final-shit\\frontend\\src\\components\\Login.js",["82"],"import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst Login = (props) =>{\r\n \r\n    const [password,setPassword] = useState('');\r\n    const usernameFormHandler = (e) =>{\r\n        props.setUsername(e.target.value)\r\n     \r\n    }\r\n    const passwordFormHandler = (e) =>{\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const getCookie = (name) =>{\r\n        var cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            var cookies = document.cookie.split(';');\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n\r\n\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        var csrftoken = getCookie('csrftoken')\r\n        fetch('http://127.0.0.1:8000/api/login', {\r\n            method:'POST',\r\n            headers:{\r\n              'Content-type':'application/json',\r\n              'X-CSRFToken':csrftoken,\r\n            },\r\n            body: JSON.stringify({'username':props.username,'password':password})\r\n          }).then( data => data.json())\r\n          .then(\r\n            data => {\r\n                console.log(data.message)\r\n                if(data.message===\"Logged in Successfully\"){\r\n                    props.setUserId(data.user_id)\r\n                    props.setIsLogged(\"true\")\r\n                    \r\n                }\r\n            }\r\n          ).catch(function(error){\r\n            console.log('ERROR:', error)\r\n          })\r\n         \r\n      \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={submitHandler}>\r\n                <input type=\"text\" placeholder=\"Username\" onChange={usernameFormHandler} value={props.username}/>\r\n                <input type=\"password\" placeholder=\"Password\" onChange={passwordFormHandler} value={password}/>\r\n                <input type=\"submit\"  value=\"login\" /> \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","G:\\final-shit\\frontend\\src\\components\\Main.js",["83","84","85","86"],"G:\\final-shit\\frontend\\src\\components\\Homepage.js",[],"G:\\final-shit\\frontend\\src\\components\\Search.js",[],"G:\\final-shit\\frontend\\src\\components\\Message.js",[],"G:\\final-shit\\frontend\\src\\components\\User.js",["87"],"G:\\final-shit\\frontend\\src\\components\\Posts.js",[],"G:\\final-shit\\frontend\\src\\components\\Post.js",["88"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst Post = (props) =>{\r\n  // console.log(props.post)\r\n\r\n    const [liked,setLiked] = useState(props.post.liked);\r\n    const [likes, setLikes] = useState(props.post.likes)\r\n \r\n\r\n   const getCookie = (name) =>{\r\n        var cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            var cookies = document.cookie.split(';');\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n\r\n    const likeHandler = (e) =>{\r\n        e.preventDefault();\r\n        var csrftoken = getCookie('csrftoken')\r\n        var url = `http://127.0.0.1:8000/api/post/${props.post.id}/${props.userId}/like`\r\n        fetch(url,{\r\n            'method':\"POST\",\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'X-CSRFToken':csrftoken,\r\n            },\r\n            body:JSON.stringify({'like':true})\r\n\r\n        }).then( data => data.json())\r\n        .then(\r\n            data => {\r\n                console.log(data)\r\n                if(data===\"Liked successfully\"){\r\n                    setLiked(true);\r\n                    setLikes(likes=>likes+1)\r\n               \r\n                }\r\n\r\n            }\r\n          ).catch(function(error){\r\n            console.log('ERROR:', error)\r\n          })\r\n\r\n\r\n    }\r\n\r\n    const unlikeHandler = (e) =>{\r\n        e.preventDefault();\r\n        var csrftoken = getCookie('csrftoken')\r\n        var url = `http://127.0.0.1:8000/api/post/${props.post.id}/${props.userId}/like`\r\n        fetch(url,{\r\n            'method':\"POST\",\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'X-CSRFToken':csrftoken,\r\n            },\r\n            body:JSON.stringify({'like':false})\r\n\r\n        }).then(data=>data.json())\r\n        .then(\r\n            data =>{\r\n                console.log(data)\r\n                if(data===\"Unliked successfully\"){\r\n                    setLiked(false)\r\n                    setLikes(likes => likes-1)\r\n           \r\n                }\r\n            }\r\n        ).catch(error =>{\r\n            console.log(\"ERROR\",error)\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <hr/>\r\n            <h3>@{props.post.username}</h3>\r\n            <p>{props.post.content}</p>\r\n            <p><b>Likes:</b> {likes}</p>\r\n            {liked   ? <button onClick={unlikeHandler}> Unlike </button> : <button onClick={likeHandler}> Like </button>}\r\n\r\n          \r\n            \r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","G:\\final-shit\\frontend\\src\\components\\Notifications.js",[],"G:\\final-shit\\frontend\\src\\components\\Notification.js",[],"G:\\final-shit\\frontend\\src\\components\\CreatePost.js",[],"G:\\final-shit\\frontend\\src\\components\\Comment.js",[],"G:\\final-shit\\frontend\\src\\components\\CreateComment.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":27,"nodeType":"95","messageId":"96","endLine":3,"endColumn":33},{"ruleId":"93","severity":1,"message":"97","line":3,"column":35,"nodeType":"95","messageId":"96","endLine":3,"endColumn":41},{"ruleId":"93","severity":1,"message":"98","line":3,"column":43,"nodeType":"95","messageId":"96","endLine":3,"endColumn":48},{"ruleId":"93","severity":1,"message":"99","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":11},{"ruleId":"93","severity":1,"message":"100","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":31,"column":8,"nodeType":"103","endLine":31,"endColumn":43,"suggestions":"104"},{"ruleId":"93","severity":1,"message":"105","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"106","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":13},{"ruleId":"93","severity":1,"message":"107","line":9,"column":17,"nodeType":"95","messageId":"96","endLine":9,"endColumn":25},{"ruleId":"93","severity":1,"message":"97","line":10,"column":35,"nodeType":"95","messageId":"96","endLine":10,"endColumn":41},{"ruleId":"101","severity":1,"message":"108","line":14,"column":8,"nodeType":"103","endLine":14,"endColumn":24,"suggestions":"109"},{"ruleId":"101","severity":1,"message":"110","line":9,"column":8,"nodeType":"103","endLine":9,"endColumn":44,"suggestions":"111"},{"ruleId":"93","severity":1,"message":"105","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Nav' is defined but never used.","'Login' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchNotifications', 'fetchPosts', 'fetchUserData', and 'saveIsLogged'. Either include them or remove the dependency array.","ArrayExpression",["114"],"'useEffect' is defined but never used.","'Posts' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'isLoggedView'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'fetchUserPosts'. Either include it or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [isLogged, postSubmit, commentSubmit, fetchPosts, fetchNotifications, fetchUserData, saveIsLogged]",{"range":"123","text":"124"},"Update the dependencies array to be: [isLoggedView, props.isLogged]",{"range":"125","text":"126"},"Update the dependencies array to be: [props.username, props.commentSubmit, fetchUserPosts]",{"range":"127","text":"128"},[979,1014],"[isLogged, postSubmit, commentSubmit, fetchPosts, fetchNotifications, fetchUserData, saveIsLogged]",[473,489],"[isLoggedView, props.isLogged]",[247,283],"[props.username, props.commentSubmit, fetchUserPosts]"]