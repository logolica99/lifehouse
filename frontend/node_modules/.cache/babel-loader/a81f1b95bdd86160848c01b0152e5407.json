{"ast":null,"code":"var _jsxFileName = \"/home/logolica99/lifehouse/final-shit/frontend/src/components/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport default_profile_pic from \"./img/icons/default_profile_pic.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = props => {\n  _s();\n\n  const [postData, setPostData] = useState(\"\");\n\n  const postFormHandler = e => {\n    setPostData(e.target.value);\n  };\n\n  const getCookie = name => {\n    var cookieValue = null;\n\n    if (document.cookie && document.cookie !== \"\") {\n      var cookies = document.cookie.split(\";\");\n\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  };\n\n  const createPostFormHandler = e => {\n    e.preventDefault();\n    var csrftoken = getCookie(\"csrftoken\");\n    const url = \"http://192.168.0.103:8000/api\";\n    fetch(`${url}/posts/create/${props.userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken\n      },\n      body: JSON.stringify({\n        content: postData\n      })\n    }).then(data => data.json()).then(data => {\n      console.log(data);\n    }).catch(function (error) {\n      console.log(\"ERROR:\", error);\n    });\n    setPostData(\"\");\n    props.setPostSubmit(bleh => bleh + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"newpost\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"username_pic\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"profile-pic\",\n        src: default_profile_pic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"@\", props.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createPostFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: postData,\n        onChange: postFormHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"red-button\",\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"19SgK2/70p8kFH45uDpDr7ZLeYs=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/home/logolica99/lifehouse/final-shit/frontend/src/components/CreatePost.js"],"names":["React","useState","default_profile_pic","CreatePost","props","postData","setPostData","postFormHandler","e","target","value","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","createPostFormHandler","preventDefault","csrftoken","url","fetch","userId","method","headers","body","JSON","stringify","content","then","data","json","console","log","catch","error","setPostSubmit","bleh","username"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport default_profile_pic from \"./img/icons/default_profile_pic.png\";\r\n\r\nconst CreatePost = (props) => {\r\n  const [postData, setPostData] = useState(\"\");\r\n  const postFormHandler = (e) => {\r\n    setPostData(e.target.value);\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== \"\") {\r\n      var cookies = document.cookie.split(\";\");\r\n      for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const createPostFormHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    var csrftoken = getCookie(\"csrftoken\");\r\n    const url = \"http://192.168.0.103:8000/api\";\r\n    fetch(`${url}/posts/create/${props.userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"X-CSRFToken\": csrftoken,\r\n      },\r\n      body: JSON.stringify({ content: postData }),\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"ERROR:\", error);\r\n      });\r\n    setPostData(\"\");\r\n    props.setPostSubmit((bleh) => bleh + 1);\r\n  };\r\n  return (\r\n    <div class=\"newpost\">\r\n      <div className=\"username_pic\">\r\n        <img className=\"profile-pic\" src={default_profile_pic} alt=\"\" />\r\n        <p>@{props.username}</p>\r\n      </div>\r\n      <form onSubmit={createPostFormHandler}>\r\n        <textarea type=\"text\" value={postData} onChange={postFormHandler} />\r\n        <div className=\"postButton\">\r\n        <button className=\"red-button\" type=\"submit\">\r\n          Post\r\n        </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default CreatePost;\r\n"]},"metadata":{},"sourceType":"module"}