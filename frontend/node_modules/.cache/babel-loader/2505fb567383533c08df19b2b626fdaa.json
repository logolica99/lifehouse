{"ast":null,"code":"var _jsxFileName = \"G:\\\\final-shit\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    getIsLogged();\n  }, []);\n  const [posts, setPosts] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState('');\n  const [isLogged, setIsLogged] = useState('');\n  useEffect(() => {\n    fetchPosts();\n    fetchNotifications();\n    fetchUserData();\n    saveIsLogged();\n  }, [isLogged]);\n\n  const saveIsLogged = () => {\n    localStorage.setItem('isLogged', isLogged);\n    localStorage.setItem('username', username);\n    localStorage.setItem('userId', userId);\n  };\n\n  const getIsLogged = () => {\n    if (localStorage.getItem('isLogged') === null) {\n      localStorage.setItem('isLogged', 'false');\n      localStorage.setItem('username', '');\n      localStorage.setItem('userId', '');\n    } else {\n      setIsLogged(localStorage.getItem('isLogged'));\n      setUsername(localStorage.getItem('username'));\n      setUserId(localStorage.getItem('userId'));\n    }\n  };\n\n  const fetchPosts = async () => {\n    const data = await fetch(`http://127.0.0.1:8000/api/following_posts/${username}`);\n    const post = await data.json();\n    setPosts(post); //  console.log(post);\n  };\n\n  const fetchNotifications = async () => {\n    const data = await fetch(`http://127.0.0.1:8000/api/notifications/${username}`);\n    const notification = await data.json();\n    setNotifications(notification);\n  };\n\n  const fetchUserData = async () => {\n    const data = await fetch(`http://127.0.0.1:8000/api/user/${username}/${userId}`);\n    const user_data = await data.json();\n    setUserData(user_data);\n    console.log(userData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      isLogged: isLogged,\n      posts: posts,\n      username: username,\n      setUsername: setUsername,\n      setIsLogged: setIsLogged,\n      notifications: notifications,\n      userId: userId,\n      setUserId: setUserId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"s3XhqcmizVr5tpfUurkJdW+xqF4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/final-shit/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Nav","Login","Main","App","getIsLogged","posts","setPosts","notifications","setNotifications","userData","setUserData","username","setUsername","userId","setUserId","isLogged","setIsLogged","fetchPosts","fetchNotifications","fetchUserData","saveIsLogged","localStorage","setItem","getItem","data","fetch","post","json","notification","user_data","console","log"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Main from './components/Main';\n\nfunction App() {\n    useEffect(() => {\n        getIsLogged();\n    }, []);\n\n    const [posts, setPosts] = useState([]);\n    const [notifications, setNotifications] = useState([]);\n    const[userData,setUserData] = useState([]);\n\n    const [username, setUsername] = useState('');\n    const [userId, setUserId] = useState('');\n    const [isLogged, setIsLogged] = useState('');\n\n    useEffect(() => {\n        fetchPosts();\n        fetchNotifications();\n        fetchUserData();\n        saveIsLogged();\n    }, [isLogged]);\n\n    const saveIsLogged = () => {\n        localStorage.setItem('isLogged', isLogged);\n        localStorage.setItem('username', username);\n        localStorage.setItem('userId',userId)\n    };\n\n    const getIsLogged = () => {\n        if (localStorage.getItem('isLogged') === null) {\n            localStorage.setItem('isLogged', 'false');\n            localStorage.setItem('username', '');\n            localStorage.setItem('userId', '');\n        } else {\n            setIsLogged(localStorage.getItem('isLogged'));\n            setUsername(localStorage.getItem('username'));\n            setUserId(localStorage.getItem('userId'));\n        }\n    };\n\n    const fetchPosts = async () => {\n        const data = await fetch(\n            `http://127.0.0.1:8000/api/following_posts/${username}`\n        );\n\n        const post = await data.json();\n        setPosts(post);\n\n        //  console.log(post);\n    };\n\n    const fetchNotifications = async () => {\n        const data = await fetch(\n            `http://127.0.0.1:8000/api/notifications/${username}`\n        );\n\n        const notification = await data.json();\n        setNotifications(notification);\n    };\n\n    const fetchUserData = async () => {\n        const data = await fetch(\n            `http://127.0.0.1:8000/api/user/${username}/${userId}`\n        );\n\n        const user_data = await data.json();\n            \n        setUserData(user_data);\n        console.log(userData);\n    };\n\n    return (\n        <div className='App'>\n            <Main\n                isLogged={isLogged}\n                posts={posts}\n                username={username}\n                setUsername={setUsername}\n                setIsLogged={setIsLogged}\n                notifications={notifications}\n                userId={userId}\n                setUserId={setUserId}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}