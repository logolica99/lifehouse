[{"/home/logolica99/lifehouse/final-shit/frontend/src/index.js":"1","/home/logolica99/lifehouse/final-shit/frontend/src/reportWebVitals.js":"2","/home/logolica99/lifehouse/final-shit/frontend/src/App.js":"3","/home/logolica99/lifehouse/final-shit/frontend/src/components/Login.js":"4","/home/logolica99/lifehouse/final-shit/frontend/src/components/Nav.js":"5","/home/logolica99/lifehouse/final-shit/frontend/src/components/Main.js":"6","/home/logolica99/lifehouse/final-shit/frontend/src/components/Search.js":"7","/home/logolica99/lifehouse/final-shit/frontend/src/components/Homepage.js":"8","/home/logolica99/lifehouse/final-shit/frontend/src/components/Notifications.js":"9","/home/logolica99/lifehouse/final-shit/frontend/src/components/Message.js":"10","/home/logolica99/lifehouse/final-shit/frontend/src/components/User.js":"11","/home/logolica99/lifehouse/final-shit/frontend/src/components/Register.js":"12","/home/logolica99/lifehouse/final-shit/frontend/src/components/Posts.js":"13","/home/logolica99/lifehouse/final-shit/frontend/src/components/Comments.js":"14","/home/logolica99/lifehouse/final-shit/frontend/src/components/CreatePost.js":"15","/home/logolica99/lifehouse/final-shit/frontend/src/components/Notification.js":"16","/home/logolica99/lifehouse/final-shit/frontend/src/components/Comment.js":"17","/home/logolica99/lifehouse/final-shit/frontend/src/components/Post.js":"18","/home/logolica99/lifehouse/final-shit/frontend/src/components/CreateComment.js":"19"},{"size":501,"mtime":1623771771502,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1623771771502,"results":"22","hashOfConfig":"21"},{"size":2343,"mtime":1624021027745,"results":"23","hashOfConfig":"21"},{"size":10270,"mtime":1624038686763,"results":"24","hashOfConfig":"21"},{"size":978,"mtime":1623771771502,"results":"25","hashOfConfig":"21"},{"size":3912,"mtime":1624032240754,"results":"26","hashOfConfig":"21"},{"size":1767,"mtime":1624010172842,"results":"27","hashOfConfig":"21"},{"size":492,"mtime":1623771771502,"results":"28","hashOfConfig":"21"},{"size":559,"mtime":1623771771506,"results":"29","hashOfConfig":"21"},{"size":97,"mtime":1623771771506,"results":"30","hashOfConfig":"21"},{"size":4790,"mtime":1623848454032,"results":"31","hashOfConfig":"21"},{"size":11824,"mtime":1624039203010,"results":"32","hashOfConfig":"21"},{"size":430,"mtime":1623771771506,"results":"33","hashOfConfig":"21"},{"size":1293,"mtime":1623849082824,"results":"34","hashOfConfig":"21"},{"size":2058,"mtime":1623771771506,"results":"35","hashOfConfig":"21"},{"size":169,"mtime":1623771771506,"results":"36","hashOfConfig":"21"},{"size":5468,"mtime":1623849428455,"results":"37","hashOfConfig":"21"},{"size":5259,"mtime":1623849432920,"results":"38","hashOfConfig":"21"},{"size":2064,"mtime":1623771771506,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1o20an0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/logolica99/lifehouse/final-shit/frontend/src/index.js",[],["83","84"],"/home/logolica99/lifehouse/final-shit/frontend/src/reportWebVitals.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/App.js",["85","86","87","88","89","90"],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Login.js",["91","92","93"],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Nav.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Main.js",["94","95","96","97","98","99"],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Search.js",["100"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Search = () => {\r\n  const [queryString, setQueryString] = useState(\"\");\r\n  const [queryResults, setQueryResults] = useState([]);\r\n  const [afterSearch,setAfterResults] = useState('');\r\n\r\n  const queryFormHandler = (e) => {\r\n    setQueryString(e.target.value);\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== \"\") {\r\n      var cookies = document.cookie.split(\";\");\r\n      for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setAfterResults(`Results for \"${queryString}:\"`)\r\n    var queryWord = queryString.split(\" \").join(\" \");\r\n\r\n\r\n    const data = await fetch(`http://127.0.0.1:8000/api/query/${queryWord}`);\r\n    const results = await data.json();\r\n    //        console.log(results);\r\n    setQueryResults(results);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input type=\"text\" onChange={queryFormHandler} value={queryString} />\r\n      <input type=\"submit\" value=\"Search\" />\r\n        <h2>{afterSearch}</h2>\r\n      {queryResults.map((result) => {\r\n        return (\r\n          <div>\r\n            <Link to={`/user/${result}`}>\r\n              <h3>@{result}</h3>\r\n            </Link>\r\n            <hr />\r\n          </div>\r\n        );\r\n      })}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/home/logolica99/lifehouse/final-shit/frontend/src/components/Homepage.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Notifications.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Message.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/User.js",["101","102"],"import React, { useState, useEffect } from 'react';\r\nimport Post from './Post';\r\n\r\nconst User = (props) => {\r\n    const getCookie = (name) => {\r\n        var cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            var cookies = document.cookie.split(';');\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === name + '=') {\r\n                    cookieValue = decodeURIComponent(\r\n                        cookie.substring(name.length + 1)\r\n                    );\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetchUserData();\r\n        \r\n\r\n    },[])\r\n    // useEffect(()=>{\r\n    //     setAlreadyFollowing(userData.already_following);\r\n    // })\r\n    useEffect(() => {\r\n        fetchUserPosts();\r\n    }, [props.username,props.commentSubmit]);\r\n\r\n    const [userPosts, setUserPosts] = useState([]);\r\n    const [followers,setFollowers]= useState('');\r\n    const [following,setFollowing] = useState('');\r\n    const[userData,setUserData] = useState([]);\r\n    \r\n    const fetchUserPosts = async () => {\r\n        const data = await fetch(\r\n            `http://127.0.0.1:8000/api/user_specific_posts/${props.username}`\r\n        );\r\n        \r\n        const post = await data.json();\r\n\r\n        setUserPosts(post);\r\n        //console.log(post);\r\n    };\r\n    const [already_following,setAlreadyFollowing] = useState(userData.already_following);\r\n    \r\n    const fetchUserData = async () => {\r\n        \r\n        const data = await fetch(\r\n            `http://127.0.0.1:8000/api/user/${props.username}/${props.userId}`\r\n            );\r\n            \r\n            const user_data = await data.json();\r\n        //console.log(user_data)\r\n        setFollowers(user_data.followers.length);\r\n        setFollowing(user_data.following.length);\r\n        setUserData(user_data);\r\n        setAlreadyFollowing(user_data.already_following)\r\n        \r\n    };\r\n    \r\n\r\n    const followButtonHandler = (e) =>{\r\n        e.preventDefault();\r\n        var csrftoken = getCookie('csrftoken');\r\n        fetch(`http://127.0.0.1:8000/api/follow/${userData.username}/${props.userId}`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({follow:true})\r\n        }).then((data)=>data.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            if(data===\"followed successfully\"){\r\n                setAlreadyFollowing(true);\r\n                setFollowers(followers=>followers+1)\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log('ERROR:', error);\r\n        });\r\n\r\n    }\r\n    const unfollowButtonHandler = (e) =>{\r\n        e.preventDefault();\r\n        var csrftoken = getCookie('csrftoken');\r\n        fetch(`http://127.0.0.1:8000/api/follow/${userData.username}/${props.userId}`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({follow:false})\r\n        }).then((data)=>data.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            if(data===\"unfollowed successfully\"){\r\n                setAlreadyFollowing(false)\r\n                setFollowers(followers=>followers-1)\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log('ERROR:', error);\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const followButton = () =>{\r\n        if(userData.can_follow){\r\n            if(already_following){\r\n                return(\r\n                    <button onClick={unfollowButtonHandler}>Unfollow</button>\r\n                )\r\n            }else{\r\n                return(\r\n                    <button onClick={followButtonHandler}>Follow</button>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n           \r\n\r\n            <p>\r\n                {userData.first_name} {userData.last_name}\r\n            </p>\r\n            <p>@{userData.username}</p>\r\n\r\n            {followButton()}\r\n\r\n            <h3>Followers: {followers}</h3>\r\n            <h3>Following: {following}</h3>\r\n            {userPosts.map((post) => {\r\n                return (\r\n                    <div>\r\n                        <Post post={post} key={post.id} userId={props.userId} />\r\n\r\n                        \r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","/home/logolica99/lifehouse/final-shit/frontend/src/components/Register.js",["103"],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Posts.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Comments.js",["104"],"import { useParams } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Comment from './Comment';\r\nimport CreateComment from './CreateComment';\r\n\r\nconst Comments = (props) => {\r\n    useEffect(() => {\r\n        fetchComments();\r\n    });\r\n\r\n    const [comments, setComments] = useState([]);\r\n\r\n    const fetchComments = () => {\r\n        props.posts.forEach((post) => {\r\n            // console.log(post.id)\r\n            if (post.id === parseInt(props.comment_id)) {\r\n                setComments(post.comments);\r\n                //  console.log(post.comments)\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n          \r\n            <CreateComment\r\n                \r\n                userId={props.userId}\r\n                postId={props.comment_id}\r\n                setCommentSubmit={props.setCommentSubmit}\r\n            />\r\n            {comments.map((comment) => {\r\n                return (\r\n                    <div>\r\n                        <Comment\r\n                            key={comment.id}\r\n                            comment={comment}\r\n                            userId={props.userId}\r\n                        />\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\nexport default Comments;\r\n","/home/logolica99/lifehouse/final-shit/frontend/src/components/CreatePost.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Notification.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Comment.js",[],"/home/logolica99/lifehouse/final-shit/frontend/src/components/Post.js",["105"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Post = (props) => {\r\n    //console.log(props.post)\r\n\r\n    const getDate = () => {\r\n        var post_created = new Date(props.post.created_at);\r\n        var today = new Date();\r\n        var differnce_in_time = today.getTime() - post_created.getTime();\r\n        var differnce_in_minute = Math.round(differnce_in_time / (1000 * 60));\r\n        var differnce_in_hour = Math.round(differnce_in_time / (1000 * 3600));\r\n        var differnce_in_day = Math.round(\r\n            differnce_in_time / (1000 * 3600 * 24)\r\n        );\r\n        var differnce_in_month = Math.round(\r\n            differnce_in_time / (1000 * 3600 * 24 * 30)\r\n        );\r\n        var differnce_in_year = Math.round(\r\n            differnce_in_time / (1000 * 3600 * 24 * 365)\r\n        );\r\n\r\n        if (differnce_in_year > 0) {\r\n            if (differnce_in_year > 1) {\r\n                return <p>{differnce_in_year} YEARS AGO</p>;\r\n            } else {\r\n                return <p>{differnce_in_year} YEAR AGO</p>;\r\n            }\r\n        } else if (differnce_in_month > 0) {\r\n            if (differnce_in_month > 1) {\r\n                return <p>{differnce_in_month} MONTHS AGO</p>;\r\n            } else {\r\n                return <p>{differnce_in_month} MONTH AGO</p>;\r\n            }\r\n        } else if (differnce_in_day > 0) {\r\n            if (differnce_in_day > 1) {\r\n                return <p>{differnce_in_day} DAYS AGO</p>;\r\n            } else {\r\n                return <p>{differnce_in_day} DAY AGO</p>;\r\n            }\r\n        } else if (differnce_in_hour > 0) {\r\n            if (differnce_in_hour > 1) {\r\n                return <p>{differnce_in_hour} HOURS AGO</p>;\r\n            } else {\r\n                return <p>{differnce_in_hour} HOUR AGO</p>;\r\n            }\r\n        } else {\r\n            if (differnce_in_minute > 1) {\r\n                return <p>{differnce_in_minute} MINUTES AGO</p>;\r\n            } else {\r\n                return <p>1 MINUTE AGO</p>;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getCookie = (name) => {\r\n        var cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            var cookies = document.cookie.split(';');\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === name + '=') {\r\n                    cookieValue = decodeURIComponent(\r\n                        cookie.substring(name.length + 1)\r\n                    );\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    };\r\n    const [liked, setLiked] = useState(props.post.liked);\r\n    const [likes, setLikes] = useState(props.post.likes);\r\n    const likeHandler = (e) => {\r\n        e.preventDefault();\r\n        var csrftoken = getCookie('csrftoken');\r\n        var url = `http://127.0.0.1:8000/api/post/${props.post.id}/${props.userId}/like`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ like: true }),\r\n        })\r\n            .then((data) => data.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                if (data === 'Liked successfully') {\r\n                    setLiked(true);\r\n                    setLikes((likes) => likes + 1);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log('ERROR:', error);\r\n            });\r\n    };\r\n\r\n    const unlikeHandler = (e) => {\r\n        e.preventDefault();\r\n        var csrftoken = getCookie('csrftoken');\r\n        var url = `http://127.0.0.1:8000/api/post/${props.post.id}/${props.userId}/like`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ like: false }),\r\n        })\r\n            .then((data) => data.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                if (data === 'Unliked successfully') {\r\n                    setLiked(false);\r\n                    setLikes((likes) => likes - 1);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log('ERROR', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <Link to={`/user/${props.post.username}`}>\r\n                <h3>@{props.post.username}</h3>\r\n            </Link>\r\n            <p>{props.post.content}</p>\r\n            <p>\r\n                <b>Likes:</b> {likes}\r\n            </p>\r\n            {liked ? (\r\n                <button onClick={unlikeHandler}> Unlike </button>\r\n            ) : (\r\n                <button onClick={likeHandler}> Like </button>\r\n            )}\r\n            <Link to={`/comments/${props.post.id}`}>\r\n                <p>comments</p>\r\n            </Link>\r\n            {getDate()}\r\n\r\n            <hr />\r\n        </div>\r\n    );\r\n};\r\nexport default Post;\r\n","/home/logolica99/lifehouse/final-shit/frontend/src/components/CreateComment.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":27,"nodeType":"112","messageId":"113","endLine":4,"endColumn":33},{"ruleId":"110","severity":1,"message":"114","line":4,"column":35,"nodeType":"112","messageId":"113","endLine":4,"endColumn":41},{"ruleId":"110","severity":1,"message":"115","line":4,"column":43,"nodeType":"112","messageId":"113","endLine":4,"endColumn":48},{"ruleId":"110","severity":1,"message":"116","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":11},{"ruleId":"110","severity":1,"message":"117","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":29,"column":6,"nodeType":"120","endLine":29,"endColumn":43,"suggestions":"121"},{"ruleId":"110","severity":1,"message":"122","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"123","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":12},{"ruleId":"124","severity":1,"message":"125","line":57,"column":19,"nodeType":"126","endLine":57,"endColumn":64},{"ruleId":"110","severity":1,"message":"127","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":13},{"ruleId":"110","severity":1,"message":"128","line":10,"column":17,"nodeType":"112","messageId":"113","endLine":10,"endColumn":25},{"ruleId":"110","severity":1,"message":"114","line":11,"column":35,"nodeType":"112","messageId":"113","endLine":11,"endColumn":41},{"ruleId":"110","severity":1,"message":"129","line":11,"column":50,"nodeType":"112","messageId":"113","endLine":11,"endColumn":58},{"ruleId":"118","severity":1,"message":"130","line":17,"column":8,"nodeType":"120","endLine":17,"endColumn":24,"suggestions":"131"},{"ruleId":"110","severity":1,"message":"132","line":19,"column":11,"nodeType":"112","messageId":"113","endLine":19,"endColumn":24},{"ruleId":"110","severity":1,"message":"133","line":13,"column":9,"nodeType":"112","messageId":"113","endLine":13,"endColumn":18},{"ruleId":"118","severity":1,"message":"134","line":27,"column":7,"nodeType":"120","endLine":27,"endColumn":9,"suggestions":"135"},{"ruleId":"118","severity":1,"message":"136","line":33,"column":8,"nodeType":"120","endLine":33,"endColumn":44,"suggestions":"137"},{"ruleId":"124","severity":1,"message":"125","line":105,"column":19,"nodeType":"126","endLine":105,"endColumn":64},{"ruleId":"110","severity":1,"message":"138","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":19},{"ruleId":"110","severity":1,"message":"122","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Nav' is defined but never used.","'Login' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchNotifications', 'fetchPosts', and 'saveIsLogged'. Either include them or remove the dependency array.","ArrayExpression",["141"],"'useEffect' is defined but never used.","'logo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Posts' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'isLoggedView'. Either include it or remove the dependency array.",["142"],"'logoutHandler' is assigned a value but never used.","'getCookie' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserData'. Either include it or remove the dependency array.",["143"],"React Hook useEffect has a missing dependency: 'fetchUserPosts'. Either include it or remove the dependency array.",["144"],"'useParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [isLogged, postSubmit, commentSubmit, fetchPosts, fetchNotifications, saveIsLogged]",{"range":"153","text":"154"},"Update the dependencies array to be: [isLoggedView, props.isLogged]",{"range":"155","text":"156"},"Update the dependencies array to be: [fetchUserData]",{"range":"157","text":"158"},"Update the dependencies array to be: [props.username, props.commentSubmit, fetchUserPosts]",{"range":"159","text":"160"},[822,859],"[isLogged, postSubmit, commentSubmit, fetchPosts, fetchNotifications, saveIsLogged]",[523,539],"[isLoggedView, props.isLogged]",[860,862],"[fetchUserData]",[1018,1054],"[props.username, props.commentSubmit, fetchUserPosts]"]