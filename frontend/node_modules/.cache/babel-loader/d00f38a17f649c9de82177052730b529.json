{"ast":null,"code":"var _jsxFileName = \"/home/logolica99/lifehouse/final-shit/frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Register from \"./Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [loginPage, setLoginPage] = useState(true);\n\n  const usernameFormHandler = e => {\n    props.setUsername(e.target.value);\n  };\n\n  const passwordFormHandler = e => {\n    setPassword(e.target.value);\n  };\n\n  const getCookie = name => {\n    var cookieValue = null;\n\n    if (document.cookie && document.cookie !== \"\") {\n      var cookies = document.cookie.split(\";\");\n\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  };\n\n  const loginPageOrRegisterPage = () => {\n    if (loginPage) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            onChange: usernameFormHandler,\n            value: props.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            onChange: passwordFormHandler,\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            onClick: loginPageToRegisterPage,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Register, {\n        username: props.username,\n        setUsername: props.setUsername,\n        setUserId: props.setUserId,\n        setIsLogged: props.setIsLogged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const loginPageToRegisterPage = e => {\n    e.preventDefault();\n    setLoginPage(false);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    var csrftoken = getCookie(\"csrftoken\");\n    fetch(\"http://127.0.0.1:8000/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken\n      },\n      body: JSON.stringify({\n        username: props.username,\n        password: password\n      })\n    }).then(data => data.json()).then(data => {\n      console.log(data.message);\n\n      if (data.message === \"Logged in Successfully\") {\n        props.setUserId(data.user_id);\n        props.setIsLogged(\"true\");\n      }\n    }).catch(function (error) {\n      console.log(\"ERROR:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loginPageOrRegisterPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Login, \"ujPoQFeTFtwrSEMIK7S4pcc2OMo=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/logolica99/lifehouse/final-shit/frontend/src/components/Login.js"],"names":["React","useState","useEffect","Register","Login","props","password","setPassword","loginPage","setLoginPage","usernameFormHandler","e","setUsername","target","value","passwordFormHandler","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","loginPageOrRegisterPage","submitHandler","username","loginPageToRegisterPage","setUserId","setIsLogged","preventDefault","csrftoken","fetch","method","headers","body","JSON","stringify","then","data","json","console","log","message","user_id","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Register from \"./Register\";\r\n\r\nconst Login = (props) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginPage, setLoginPage] = useState(true);\r\n  const usernameFormHandler = (e) => {\r\n    props.setUsername(e.target.value);\r\n  };\r\n  const passwordFormHandler = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const getCookie = (name) => {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== \"\") {\r\n      var cookies = document.cookie.split(\";\");\r\n      for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const loginPageOrRegisterPage = () => {\r\n    if (loginPage) {\r\n      return (\r\n        <div>\r\n          <form onSubmit={submitHandler}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              onChange={usernameFormHandler}\r\n              value={props.username}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={passwordFormHandler}\r\n              value={password}\r\n            />\r\n            <input type=\"submit\" value=\"Log In\" />\r\n          </form>\r\n          <p>\r\n            Don't have an account?{\" \"}\r\n            <a href=\"\" onClick={loginPageToRegisterPage}>\r\n              Sign Up\r\n            </a>\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Register username={props.username} setUsername={props.setUsername} setUserId={props.setUserId} setIsLogged={props.setIsLogged}/>\r\n      );\r\n    }\r\n  };\r\n\r\n  const loginPageToRegisterPage = (e) => {\r\n    e.preventDefault();\r\n    setLoginPage(false);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    var csrftoken = getCookie(\"csrftoken\");\r\n    fetch(\"http://127.0.0.1:8000/api/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"X-CSRFToken\": csrftoken,\r\n      },\r\n      body: JSON.stringify({\r\n        username: props.username,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((data) => data.json())\r\n\r\n      .then((data) => {\r\n        console.log(data.message);\r\n        if (data.message === \"Logged in Successfully\") {\r\n          props.setUserId(data.user_id);\r\n          props.setIsLogged(\"true\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"ERROR:\", error);\r\n      });\r\n  };\r\n\r\n  return <div>{loginPageOrRegisterPage()}</div>;\r\n};\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}