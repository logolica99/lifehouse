{"ast":null,"code":"var _jsxFileName = \"/home/logolica99/lifehouse/final-shit/frontend/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [queryString, setQueryString] = useState('');\n  const [queryResults, setQueryResults] = useState([]);\n\n  const queryFormHandler = e => {\n    setQueryString(e.target.value);\n  };\n\n  const getCookie = name => {\n    var cookieValue = null;\n\n    if (document.cookie && document.cookie !== \"\") {\n      var cookies = document.cookie.split(\";\");\n\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const data = await fetch(`http://127.0.0.1:8000/api/query/${queryString}`);\n    const results = await data.json();\n    console.log(results);\n    setQueryResults(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: queryFormHandler,\n      value: queryString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), queryResults.map(() => {})]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"+yPRxbKCeAzqWsQmc8SSMyAAVbM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/logolica99/lifehouse/final-shit/frontend/src/components/Search.js"],"names":["React","useState","useEffect","Search","queryString","setQueryString","queryResults","setQueryResults","queryFormHandler","e","target","value","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","submitHandler","preventDefault","data","fetch","results","json","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,MAAM,GAAE,MAAK;AAAA;;AAEf,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BJ,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMO,gBAAgB,GAAIC,CAAD,IAAM;AAC3BJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFD;;AAKA,QAAMC,SAAS,GAAIC,IAAD,IAAU;AACxB,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC7C,UAAIC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,YAAIH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CADuC,CAEvC;;AACA,YAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBT,IAAI,CAACO,MAAL,GAAc,CAAlC,MAAyCP,IAAI,GAAG,GAApD,EAAyD;AACvDC,UAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACD;AACF;AACF;;AACD,WAAON,WAAP;AACD,GAdH;;AAgBA,QAAMU,aAAa,GAAG,MAAOf,CAAP,IAAY;AAC9BA,IAAAA,CAAC,CAACgB,cAAF;AACA,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,mCAAkCvB,WAAY,EAAhD,CAAxB;AACA,UAAMwB,OAAO,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACArB,IAAAA,eAAe,CAACmB,IAAD,CAAf;AACH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAElB,gBAA7B;AAA+C,MAAA,KAAK,EAAEJ;AAAtD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKE,YAAY,CAAC0B,GAAb,CAAiB,MAAI,CAErB,CAFA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA3CD;;GAAM7B,M;;KAAAA,M;AA6CN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Search= () =>{\r\n\r\n    const [queryString,setQueryString] = useState('');\r\n    const [queryResults, setQueryResults] = useState([]);\r\n\r\n    const queryFormHandler = (e) =>{\r\n        setQueryString(e.target.value)\r\n    }\r\n\r\n\r\n    const getCookie = (name) => {\r\n        var cookieValue = null;\r\n        if (document.cookie && document.cookie !== \"\") {\r\n          var cookies = document.cookie.split(\";\");\r\n          for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        return cookieValue;\r\n      };\r\n\r\n    const submitHandler = async (e) =>{\r\n        e.preventDefault();\r\n        const data = await fetch(`http://127.0.0.1:8000/api/query/${queryString}`);\r\n        const results = await data.json();\r\n        console.log(results);\r\n        setQueryResults(data);\r\n    }\r\n\r\n    return(\r\n        <form >\r\n            <input type=\"text\" onChange={queryFormHandler} value={queryString}/>\r\n            <input type=\"submit\" value=\"Search\" />\r\n            {queryResults.map(()=>{\r\n\r\n            })}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}