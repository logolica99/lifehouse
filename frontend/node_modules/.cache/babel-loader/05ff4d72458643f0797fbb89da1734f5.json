{"ast":null,"code":"var _jsxFileName = \"G:\\\\final-shit\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState('');\n  const [isLogged, setIsLogged] = useState(false);\n  useEffect(() => {\n    fetchPosts();\n  }, [isLogged]);\n  use;\n\n  const fetchPosts = async () => {\n    const data = await fetch(`http://127.0.0.1:8000/api/following_posts/${username}`);\n    const post = await data.json();\n    console.log(post);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: isLogged === true ? /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        username: username,\n        setUsername: setUsername,\n        setIsLogged: setIsLogged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"5Bzz1mGOCqgLdvbz9qThtxjlrH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/final-shit/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Nav","Login","App","posts","setPosts","username","setUsername","isLogged","setIsLogged","fetchPosts","use","data","fetch","post","json","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACW,QAAD,EAAUC,WAAV,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACJC,EAAAA,SAAS,CAAC,MAAM;AACRc,IAAAA,UAAU;AACb,GAFI,EAEF,CAACF,QAAD,CAFE,CAAT;AAKIG,EAAAA,GAAG;;AAEH,QAAMD,UAAU,GAAG,YAAY;AAC5B,UAAME,IAAI,GAAG,MAAMC,KAAK,CAAE,6CAA4CP,QAAS,EAAvD,CAAxB;AAKC,UAAMQ,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GARD;;AAUA,sBACI,QAAC,MAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACMN,QAAQ,KAAG,IAAX,gBAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAAhB,gBAAuB,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEF,QAAjB;AAA2B,QAAA,WAAW,EAAEC,WAAxC;AAAqD,QAAA,WAAW,EAAEE;AAAlE;AAAA;AAAA;AAAA;AAAA;AAD7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAhCQN,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Login from './components/Login'\n\nfunction App() {\n    \n    const [posts, setPosts] = useState([]);\n  \n    const [username,setUsername] = useState('');\n    const [isLogged, setIsLogged] = useState(false);\nuseEffect(() => {\n        fetchPosts();\n    }, [isLogged]);\n\n\n    use\n\n    const fetchPosts = async () => {\n       const data = await fetch(`http://127.0.0.1:8000/api/following_posts/${username}`);\n\n\n    \n\n        const post = await data.json();\n        console.log(post)\n    };\n\n    return (\n        <Router>\n            <div className='App'>\n                { isLogged===true?<Nav/>:<Login username={username} setUsername={setUsername} setIsLogged={setIsLogged}/>}\n                \n                \n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}