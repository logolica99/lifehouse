{"ast":null,"code":"var _jsxFileName = \"/home/logolica99/lifehouse/final-shit/frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport Login from \"./Login\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [registerPage, setRegisterPage] = useState(true); //console.log(props)\n\n  const [username, setUsername] = useState(\"\");\n  const [first_name, setFirstName] = useState(\"\");\n  const [last_name, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n\n  const getCookie = name => {\n    var cookieValue = null;\n\n    if (document.cookie && document.cookie !== \"\") {\n      var cookies = document.cookie.split(\";\");\n\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  };\n\n  const registerPageToLoginPage = e => {\n    e.preventDefault();\n    setRegisterPage(false);\n  };\n\n  const usernameFormHandler = e => {\n    setUsername(e.target.value);\n  };\n\n  const passwordFormHandler = e => {\n    setPassword(e.target.value);\n  };\n\n  const confirmationFormHandler = e => {\n    setConfirmation(e.target.value);\n  };\n\n  const emailFormHandler = e => {\n    setEmail(e.target.value);\n  };\n\n  const firstNameFormHandler = e => {\n    setFirstName(e.target.value);\n  };\n\n  const lastNameFormHandler = e => {\n    setLastName(e.target.value);\n  };\n\n  const loginPageOrRegisterPage = () => {\n    if (registerPage) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register__container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username\",\n              value: username,\n              onChange: usernameFormHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"First Name\",\n              value: first_name,\n              onChange: firstNameFormHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Last Name\",\n              value: last_name,\n              onChange: lastNameFormHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: emailFormHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: passwordFormHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              value: confirmation,\n              onChange: confirmationFormHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              onClick: registerPageToLoginPage,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        username: props.username,\n        setUsername: props.setUsername,\n        setIsLogged: props.setIsLogged,\n        userId: props.userId,\n        setUserId: props.setUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    var csrftoken = getCookie(\"csrftoken\");\n    fetch(\"http://127.0.0.1:8000/api/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken\n      },\n      body: JSON.stringify({\n        username: username,\n        email: email,\n        password: password,\n        confirmation: confirmation,\n        first_name: first_name,\n        last_name: last_name\n      })\n    }).then(data => data.json()).then(data => {\n      console.log(data.message);\n      props.setUsername(username);\n\n      if (data.message === \"account created successfully\") {\n        props.setUserId(data.user_id);\n        props.setIsLogged(\"true\");\n      }\n    }).catch(function (error) {\n      console.log(\"ERROR: \", error);\n    });\n  };\n\n  return loginPageOrRegisterPage();\n};\n\n_s(Register, \"+NRsCVPeeInjW3wyh5MKN1pGXjQ=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/logolica99/lifehouse/final-shit/frontend/src/components/Register.js"],"names":["Login","React","useState","Register","props","registerPage","setRegisterPage","username","setUsername","first_name","setFirstName","last_name","setLastName","email","setEmail","password","setPassword","confirmation","setConfirmation","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","registerPageToLoginPage","e","preventDefault","usernameFormHandler","target","value","passwordFormHandler","confirmationFormHandler","emailFormHandler","firstNameFormHandler","lastNameFormHandler","loginPageOrRegisterPage","submitHandler","setIsLogged","userId","setUserId","csrftoken","fetch","method","headers","body","JSON","stringify","then","data","json","console","log","message","user_id","catch","error"],"mappings":"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","sourcesContent":["import Login from \"./Login\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Register = (props) => {\r\n  const [registerPage, setRegisterPage] = useState(true);\r\n\r\n  //console.log(props)\r\n  const [username, setUsername] = useState(\"\");\r\n  const [first_name, setFirstName] = useState(\"\");\r\n  const [last_name, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmation, setConfirmation] = useState(\"\");\r\n\r\n  const getCookie = (name) => {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== \"\") {\r\n      var cookies = document.cookie.split(\";\");\r\n      for (var i = 0; i < cookies.length; i++) {\r\n        var cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  };\r\n\r\n  const registerPageToLoginPage = (e) => {\r\n    e.preventDefault();\r\n    setRegisterPage(false);\r\n  };\r\n\r\n  const usernameFormHandler = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const passwordFormHandler = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const confirmationFormHandler = (e) => {\r\n    setConfirmation(e.target.value);\r\n  };\r\n  const emailFormHandler = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const firstNameFormHandler = (e) => {\r\n    setFirstName(e.target.value);\r\n  };\r\n  const lastNameFormHandler = (e) => {\r\n    setLastName(e.target.value);\r\n  };\r\n\r\n  const loginPageOrRegisterPage = () => {\r\n    if (registerPage) {\r\n      return (\r\n        <div className=\"register__container\">\r\n          <div>\r\n          <form onSubmit={submitHandler}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChange={usernameFormHandler}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              value={first_name}\r\n              onChange={firstNameFormHandler}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              value={last_name}\r\n              onChange={lastNameFormHandler}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={emailFormHandler}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={passwordFormHandler}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmation}\r\n              onChange={confirmationFormHandler}\r\n            />\r\n            <input type=\"submit\" value=\"Sign Up\" />\r\n          </form>\r\n          <p>\r\n            Already have an account?{\" \"}\r\n            <a href=\"\" onClick={registerPageToLoginPage}>\r\n              Login\r\n            </a>\r\n          </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Login\r\n          username={props.username}\r\n          setUsername={props.setUsername}\r\n          setIsLogged={props.setIsLogged}\r\n          userId={props.userId}\r\n          setUserId={props.setUserId}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    var csrftoken = getCookie(\"csrftoken\");\r\n    fetch(\"http://127.0.0.1:8000/api/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"X-CSRFToken\": csrftoken,\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        confirmation: confirmation,\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n      }),\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        console.log(data.message);\r\n        props.setUsername(username);\r\n        if (data.message === \"account created successfully\") {\r\n          props.setUserId(data.user_id);\r\n          props.setIsLogged(\"true\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"ERROR: \", error);\r\n      });\r\n  };\r\n\r\n  return loginPageOrRegisterPage();\r\n};\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}