{"ast":null,"code":"var _jsxFileName = \"/home/logolica99/lifehouse/final-shit/frontend/src/components/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport Comment from \"./Comment\";\nimport CreateComment from \"./CreateComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = props => {\n  _s();\n\n  useEffect(() => {\n    fetchComments();\n  });\n  const [comments, setComments] = useState([]);\n\n  const fetchComments = () => {\n    props.posts.forEach(post => {\n      // console.log(post.id)\n      if (post.id === parseInt(props.comment_id)) {\n        setComments(post.comments); //  console.log(post.comments)\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment_page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment_container\",\n      children: [\"div\", /*#__PURE__*/_jsxDEV(CreateComment, {\n        userId: props.userId,\n        postId: props.comment_id,\n        setCommentSubmit: props.setCommentSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment,\n          userId: props.userId\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"+GjHHEiBvhfQdFp8wQwK06umJ8c=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/home/logolica99/lifehouse/final-shit/frontend/src/components/Comments.js"],"names":["useParams","React","useState","useEffect","Comment","CreateComment","Comments","props","fetchComments","comments","setComments","posts","forEach","post","id","parseInt","comment_id","userId","setCommentSubmit","map","comment"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1BJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,aAAa;AACd,GAFQ,CAAT;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMM,aAAa,GAAG,MAAM;AAC1BD,IAAAA,KAAK,CAACI,KAAN,CAAYC,OAAZ,CAAqBC,IAAD,IAAU;AAC5B;AACA,UAAIA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAACR,KAAK,CAACS,UAAP,CAAxB,EAA4C;AAC1CN,QAAAA,WAAW,CAACG,IAAI,CAACJ,QAAN,CAAX,CAD0C,CAE1C;AACD;AACF,KAND;AAOD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,qCAEE,QAAC,aAAD;AACE,QAAA,MAAM,EAAEF,KAAK,CAACU,MADhB;AAEE,QAAA,MAAM,EAAEV,KAAK,CAACS,UAFhB;AAGE,QAAA,gBAAgB,EAAET,KAAK,CAACW;AAH1B;AAAA;AAAA;AAAA;AAAA,cAFF,EAOGT,QAAQ,CAACU,GAAT,CAAcC,OAAD,IAAa;AACzB,4BACE,QAAC,OAAD;AAA0B,UAAA,OAAO,EAAEA,OAAnC;AAA4C,UAAA,MAAM,EAAEb,KAAK,CAACU;AAA1D,WAAcG,OAAO,CAACN,EAAtB;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJA,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlCD;;GAAMR,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport CreateComment from \"./CreateComment\";\r\n\r\nconst Comments = (props) => {\r\n  useEffect(() => {\r\n    fetchComments();\r\n  });\r\n\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const fetchComments = () => {\r\n    props.posts.forEach((post) => {\r\n      // console.log(post.id)\r\n      if (post.id === parseInt(props.comment_id)) {\r\n        setComments(post.comments);\r\n        //  console.log(post.comments)\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment_page\">\r\n      <div className=\"comment_container\">\r\n        div\r\n        <CreateComment\r\n          userId={props.userId}\r\n          postId={props.comment_id}\r\n          setCommentSubmit={props.setCommentSubmit}\r\n        />\r\n        {comments.map((comment) => {\r\n          return (\r\n            <Comment key={comment.id} comment={comment} userId={props.userId} />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}