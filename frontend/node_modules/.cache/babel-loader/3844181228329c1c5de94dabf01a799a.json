{"ast":null,"code":"var _jsxFileName = \"G:\\\\final-shit\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [password, setPassword] = useState('');\n\n  const usernameFormHandler = e => {\n    props.setUsername(e.target.value);\n  };\n\n  const passwordFormHandler = e => {\n    setPassword(e.target.value);\n  };\n\n  const getCookie = name => {\n    var cookieValue = null;\n\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    var csrftoken = getCookie('csrftoken');\n    fetch('http://127.0.0.1:8000/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify({\n        'username': props.username,\n        'password': password\n      })\n    }).then(data => data.json()).then(data => {\n      console.log(data.message);\n\n      if (data.message === \"Logged in Successfully\") {\n        props.setUserId(data.user_id);\n        props.setIsLogged(\"true\");\n      }\n    }).catch(function (error) {\n      console.log('ERROR:', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: usernameFormHandler,\n        value: props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: passwordFormHandler,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"F6q7zo2QcAlB3jFMG6B/2lyY82I=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["G:/final-shit/frontend/src/components/Login.js"],"names":["React","useState","useEffect","Login","props","password","setPassword","usernameFormHandler","e","setUsername","target","value","passwordFormHandler","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","submitHandler","preventDefault","csrftoken","fetch","method","headers","body","JSON","stringify","username","then","data","json","console","log","message","setUserId","user_id","setIsLogged","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst Login = (props) =>{\r\n    \r\n    const [password,setPassword] = useState('');\r\n    const usernameFormHandler = (e) =>{\r\n        props.setUsername(e.target.value)\r\n     \r\n    }\r\n    const passwordFormHandler = (e) =>{\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const getCookie = (name) =>{\r\n        var cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            var cookies = document.cookie.split(';');\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n\r\n\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        var csrftoken = getCookie('csrftoken')\r\n        fetch('http://127.0.0.1:8000/api/login', {\r\n            method:'POST',\r\n            headers:{\r\n              'Content-type':'application/json',\r\n              'X-CSRFToken':csrftoken,\r\n            },\r\n            body: JSON.stringify({'username':props.username,'password':password})\r\n          }).then( data => data.json())\r\n          .then(\r\n            data => {\r\n                console.log(data.message)\r\n                if(data.message===\"Logged in Successfully\"){\r\n                    props.setUserId(data.user_id)\r\n                    props.setIsLogged(\"true\")\r\n                    \r\n                }\r\n            }\r\n          ).catch(function(error){\r\n            console.log('ERROR:', error)\r\n          })\r\n         \r\n      \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={submitHandler}>\r\n                <input type=\"text\" placeholder=\"Username\" onChange={usernameFormHandler} value={props.username}/>\r\n                <input type=\"password\" placeholder=\"Password\" onChange={passwordFormHandler} value={password}/>\r\n                <input type=\"submit\"  value=\"login\" /> \r\n            </form>\r\n            <a href=\"\"></a>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}