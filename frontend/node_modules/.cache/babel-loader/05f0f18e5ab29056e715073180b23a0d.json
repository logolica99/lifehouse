{"ast":null,"code":"var _jsxFileName = \"G:\\\\final-shit\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    getIsLogged();\n  }, []);\n  const [posts, setPosts] = useState([]);\n  const [notifications, setNotifications] = [];\n  const [username, setUsername] = useState('');\n  const [isLogged, setIsLogged] = useState('');\n  useEffect(() => {\n    fetchPosts();\n    saveIsLogged();\n  }, [isLogged]);\n\n  const saveIsLogged = () => {\n    localStorage.setItem('isLogged', isLogged);\n    localStorage.setItem('username', username);\n  };\n\n  const getIsLogged = () => {\n    if (localStorage.getItem('isLogged') === null) {\n      localStorage.setItem('isLogged', \"false\");\n      localStorage.setItem('username', '');\n    } else {\n      setIsLogged(localStorage.getItem('isLogged'));\n      setUsername(localStorage.getItem('username'));\n    }\n  };\n\n  const fetchPosts = async () => {\n    const data = await fetch(`http://127.0.0.1:8000/api/following_posts/${username}`);\n    const post = await data.json();\n    setPosts(post); //  console.log(post);\n  };\n\n  const fetchNotifications = async () => {\n    const data = await fetch(`http://127.0.0.1:8000/api/notifications/${username}`);\n    const notification = await data.json();\n    setNotifications(notifications); //  console.log(notifications);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      isLogged: isLogged,\n      posts: posts,\n      username: username,\n      setUsername: setUsername,\n      setIsLogged: setIsLogged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"ug1dA/CZqht+lAfm18i44MWC6mA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/final-shit/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Nav","Login","Main","App","getIsLogged","posts","setPosts","notifications","setNotifications","username","setUsername","isLogged","setIsLogged","fetchPosts","saveIsLogged","localStorage","setItem","getItem","data","fetch","post","json","fetchNotifications","notification"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAGXR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,aAAD,EAAeC,gBAAf,IAAkC,EAAxC;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,UAAU;AACVC,IAAAA,YAAY;AACf,GAHQ,EAGN,CAACH,QAAD,CAHM,CAAT;;AAKA,QAAMG,YAAY,GAAG,MAAM;AACvBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCL,QAAjC;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCP,QAAjC;AACH,GAHD;;AAKA,QAAML,WAAW,GAAG,MAAM;AACtB,QAAIW,YAAY,CAACE,OAAb,CAAqB,UAArB,MAAqC,IAAzC,EAA+C;AAC3CF,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,OAAjC;AACAD,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,EAAjC;AAEH,KAJD,MAIO;AACHJ,MAAAA,WAAW,CAACG,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAD,CAAX;AACAP,MAAAA,WAAW,CAACK,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAD,CAAX;AACH;AACJ,GATD;;AAWA,QAAMJ,UAAU,GAAG,YAAY;AAC3B,UAAMK,IAAI,GAAG,MAAMC,KAAK,CACnB,6CAA4CV,QAAS,EADlC,CAAxB;AAIA,UAAMW,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAf,IAAAA,QAAQ,CAACc,IAAD,CAAR,CAN2B,CAO7B;AACD,GARD;;AAWA,QAAME,kBAAkB,GAAG,YAAY;AACnC,UAAMJ,IAAI,GAAG,MAAMC,KAAK,CACnB,2CAA0CV,QAAS,EADhC,CAAxB;AAIA,UAAMc,YAAY,GAAG,MAAML,IAAI,CAACG,IAAL,EAA3B;AACAb,IAAAA,gBAAgB,CAACD,aAAD,CAAhB,CANmC,CAOrC;AACD,GARD;;AASA,sBAGQ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEI,QAAhB;AAA0B,MAAA,KAAK,EAAEN,KAAjC;AAAwC,MAAA,QAAQ,EAAEI,QAAlD;AAA4D,MAAA,WAAW,EAAEC,WAAzE;AAAsF,MAAA,WAAW,EAAEE;AAAnG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAHR;AAQH;;GA9DQT,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Login from './components/Login';\nimport Main from './components/Main'\n\n\n\nfunction App() {\n\n\n    useEffect(() => {\n        getIsLogged();\n    }, []);\n\n\n    const [posts, setPosts] = useState([]);\n    const [notifications,setNotifications]=([]);\n\n    const [username, setUsername] = useState('');\n    const [isLogged, setIsLogged] = useState('');\n    useEffect(() => {\n        fetchPosts();\n        saveIsLogged();\n    }, [isLogged]);\n\n    const saveIsLogged = () => {\n        localStorage.setItem('isLogged', isLogged);\n        localStorage.setItem('username', username);\n    };\n\n    const getIsLogged = () => {\n        if (localStorage.getItem('isLogged') === null) {\n            localStorage.setItem('isLogged', \"false\");\n            localStorage.setItem('username', '');\n\n        } else {\n            setIsLogged(localStorage.getItem('isLogged'));\n            setUsername(localStorage.getItem('username'))\n        }\n    };\n\n    const fetchPosts = async () => {\n        const data = await fetch(\n            `http://127.0.0.1:8000/api/following_posts/${username}`\n        );\n\n        const post = await data.json();\n        setPosts(post);\n      //  console.log(post);\n    };\n\n    \n    const fetchNotifications = async () => {\n        const data = await fetch(\n            `http://127.0.0.1:8000/api/notifications/${username}`\n        );\n\n        const notification = await data.json();\n        setNotifications(notifications);\n      //  console.log(notifications);\n    };\n    return (\n\n\n            <div className='App'>\n                <Main isLogged={isLogged} posts={posts} username={username} setUsername={setUsername} setIsLogged={setIsLogged}/>\n            </div>\n       \n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}